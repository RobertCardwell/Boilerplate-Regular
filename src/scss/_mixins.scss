/*====================
    Media Queries
====================*/ 

/*
    Eg.
    .container{
        width:1024px;
        
        @include tablets{
            width:90%;
        }
    }
*/ 

$lrm:       1350px; 
$tablets:   1100px;
$phones:    720px;

@mixin lrm {  // low resolution monitors
    @media screen and (max-width: 1350px){ @content; }
}

// Treat tablets and landscape phones the same.
// Content will also be applied to portrait phones. 
@mixin tablets {
    @media screen and (max-width: $tablets) { @content; }
    @media screen and (max-width: $phones) and (orientation: landscape) { @content; }
}

// Content will only be applied top portrait phones.
@mixin phones {
    @media screen and (max-width: 720px) and (orientation: portrait) { @content; }
}

.tablet-break {
    @include tablets {
        display: table;
    }    
}

.phone-break {
    @include phones {
        display: table;
    }    
}

/*====================
    Unit transform
====================*/

/*
    Used for making containers have width in percentages. 
    Usage: define elemnt width in px and the width of parent elemnt in px. 
    eg. .block{width:cp(512px, 1024px)} this will result in .block{width:50%;}   
*/

@function cp($target, $container) {
    @return ($target / $container) * 100%;
}

/*  
    Used for making px values convert to rem values
    Usage: define font-size in px and it will convert to rems
    eg. font-size: rem(14px);
*/

@function rem($target, $context: $base-font-size) {
    @if $target == 0 { @return 0 }
    @return $target / $context + 0rem;
}
$base-font-size: 16px;

.box {
    width: cp(200px, 960px);
    font-size: rem(18px);
    @include tablets {
        width: 50%;
    }
    @include phones {
        width: 100%;
    }
}

/*====================
    Flex
====================*/

/*  Display an HTML element as a flex element. To use:
    .row {
        @include flex;
    }
*/

@mixin flex {
    display: -webkit-flex;
    display: flex;
}

/*  Center multiple divs down the center. To use:
    .some-div {
        @include column-center;
    }
*/

@mixin column-center() {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/*========================================
    Spacers (apply top and bottom padding)
========================================*/
/*
    To use:

    .cta {
        @include spacer;
    }
*/

$spacer-large: 2rem;
$spacer-medium: 1rem;
$spacer-small: 0.5rem;

@mixin spacer() {
    padding: $spacer-large 0;
    @include tablets {
      padding: $spacer-medium 0;
    }
    @include phones {
      padding: $spacer-small 0;
    }
}

